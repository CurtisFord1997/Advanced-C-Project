// <auto-generated />
using DrinkUp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DrinkUp.Migrations
{
    [DbContext(typeof(DrinkUpContext))]
    [Migration("20210210143804_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DrinkUp.Models.Coffee", b =>
                {
                    b.Property<int>("CoffeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Caffiene");

                    b.Property<string>("CoffeeName");

                    b.Property<string>("CoffeeType");

                    b.Property<string>("Description");

                    b.HasKey("CoffeeID");

                    b.ToTable("Coffee");
                });

            modelBuilder.Entity("DrinkUp.Models.ColdCoffee", b =>
                {
                    b.Property<int>("ColdCoffeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Caffiene");

                    b.Property<string>("ColdCoffeeName");

                    b.Property<string>("ColdCoffeeType");

                    b.HasKey("ColdCoffeeID");

                    b.ToTable("ColdCoffee");
                });

            modelBuilder.Entity("DrinkUp.Models.Frapuccino", b =>
                {
                    b.Property<int>("FrapID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FrapName");

                    b.Property<string>("FrapType");

                    b.HasKey("FrapID");

                    b.ToTable("Frapuccino");
                });

            modelBuilder.Entity("DrinkUp.Models.HotCoffee", b =>
                {
                    b.Property<int>("HotCoffeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HotCoffeeName");

                    b.Property<string>("HotCoffeeType");

                    b.HasKey("HotCoffeeID");

                    b.ToTable("HotCoffee");
                });

            modelBuilder.Entity("DrinkUp.Models.Tea", b =>
                {
                    b.Property<int>("TeaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrewTempC");

                    b.Property<decimal>("BrewTime");

                    b.Property<string>("BrewType");

                    b.Property<string>("Caffene")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("Discription");

                    b.Property<bool>("Organic");

                    b.Property<string>("Source");

                    b.Property<string>("TeaBrand");

                    b.Property<string>("TeaName");

                    b.Property<string>("TeaType");

                    b.HasKey("TeaID");

                    b.ToTable("Tea");
                });

            modelBuilder.Entity("DrinkUp.Models.TeaIngredient", b =>
                {
                    b.Property<int>("TeaIngredientID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IngredientName");

                    b.HasKey("TeaIngredientID");

                    b.ToTable("TeaIngredient");
                });

            modelBuilder.Entity("DrinkUp.Models.TeaIngredientLink", b =>
                {
                    b.Property<int>("TeaId");

                    b.Property<int>("TeaIngredientID");

                    b.HasKey("TeaId", "TeaIngredientID");

                    b.ToTable("TeaIngredientLink");
                });

            modelBuilder.Entity("DrinkUp.Models.TeaStore", b =>
                {
                    b.Property<int>("TeaStoreID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.HasKey("TeaStoreID");

                    b.ToTable("TeaStore");
                });

            modelBuilder.Entity("DrinkUp.Models.TeaStoreLink", b =>
                {
                    b.Property<int>("TeaId");

                    b.Property<int>("TeaStoreId");

                    b.HasKey("TeaId", "TeaStoreId");

                    b.ToTable("TeaStoreLink");
                });

            modelBuilder.Entity("DrinkUp.Models.TeaTags", b =>
                {
                    b.Property<int>("TeaTagID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tag");

                    b.HasKey("TeaTagID");

                    b.ToTable("TeaTags");
                });

            modelBuilder.Entity("DrinkUp.Models.TeaTagsLink", b =>
                {
                    b.Property<int>("TeaId");

                    b.Property<int>("TeaTagID");

                    b.HasKey("TeaId", "TeaTagID");

                    b.ToTable("TeaTagsLink");
                });
#pragma warning restore 612, 618
        }
    }
}
